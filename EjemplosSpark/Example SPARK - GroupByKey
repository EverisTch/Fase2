You have been given below list in scala (name,sex,cost) for each work done.
List( ("Deeapak" , "male", 4000), ("Deepak" , "male", 2000), ("Deepika" , "female", 2000),("Deepak" , "female", 2000), ("Deepak" , "male", 1000) , ("Neeta" , "female", 2000))

Now write a Spark program to load this list as an RDD and do the sum of cost for combination of name and sex (as key)

val list = sc.parallelize(List( ("Deeapak" , "male", 4000), ("Deepak" , "male", 2000), ("Deepika" , "female", 2000),("Deepak" , "female", 2000), ("Deepak" , "male", 1000) , ("Neeta" , "female", 2000)))
val listRDD = list.map({case (name,sex,cost) => (name,sex)->cost})
val byKeyGrouped = listRDD.groupByKey
byKeyGrouped.take(10)
val result 		 = byKeyGrouped.map{ case ((id1,id2), values) => (id1, id2, values.sum)}
result.repartition(1).saveAsTextFile("/user/cloudera/spark12/result.txt")

